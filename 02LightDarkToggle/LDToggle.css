* {
    box-sizing: border-box;
    /* padding과 border가 전체길이에 포함되도록 설정 */
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

body.dark {
    background-color: rgb(38, 43, 40);
}

.lable {
    position: relative;
    /* static 기준으로 원래 있어야할 자리에서 상대적인 이동위치 선정 */
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    background-color: indigo;
    border-radius: 50px;
    padding-bottom: 2px;
    height: 26px;
    width: 50px;
    transform: scale(1.5);
}

.ball {
    background-color: #fff;
    position: absolute;
    /* 가장 가까운 부모 엘러먼트의 위치값을 기준으로 이동위치 선정. 여기서는 label을 기준으로 움직임.
    박스속 박스의 위치 정할때 사용할 듯 */
    /* fixed는 모두를 무시하고 화면기준으로 위치 선정 */
    margin: 0;
    top: 0.8px;
    left: 1px;
    border-radius: 50%;
    height: 24px;
    width: 24px;
    transition: transform 0.1s linear;
    /* 형태가 변하는 전환효과
    - 방법: transition에서 전환할 대상을 지정하고, 액션에 따른 추가적인 조건을 transeform에 걸어서 효과를 만든다.*/
}

.checkbox {
    display: none;
}

.checkbox:checked + .lable .ball {
    /* checkbox가 체크된 상태에서 형제 셀렉터중 check박스 바로 옆의 lable.그 자식 중 ball. 형제 선택시 중간에 방해물이 있으면 선택 안됨 */
    /* ~ 일때는 중간에 방해물 있어도 모두 선택됨 */
    transform: translateX(24px);
}

